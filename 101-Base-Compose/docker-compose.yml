version: "3"

services:
  adguard:
    image: [URL]/adguard/adguardhome
    container_name: adguard
    restart: unless-stopped
    ports:
      - [IP]:53:53/tcp # Plain DNS
      - [IP]:53:53/udp # Plain DNS
      #- [IP]:67:67/udp     # DHCP
      #- [IP]:68:68/tcp     # DHCP
      #- [IP]:68:68/udp     # DHCP
      #- [IP]:80:80/tcp     # re routing http to https
      #- [IP]:443:443/tcp   # DNS over HTTPS
      #- [IP]:443:443/udp   # DNS over HTTPS
      #- [IP]:3000:3000/tcp # Web interface
      #- [IP]:853:853/tcp   # DNS over TLS
      #- [IP]:784:784/udp   # DNS over Quick
      #- [IP]:853:853/udp   # DNS over Quick
      #- [IP]:8853:8853/udp # DNS over Quick
      #- [IP]:5443:5443/tcp # DNSCrypt
      #- [IP]:5443:5443/udp # DNSCrypt
    volumes:
      - adguard_conf:/opt/adguardhome/conf
      - adguard_work:/opt/adguardhome/work
    networks:
      - caddy_net
    labels:
      - com.centurylinklabs.watchtower.enable=true
  caddy:
    image: [URL]/caddy:latest
    container_name: caddy
    restart: unless-stopped
    volumes:
      - /opt/compose/Caddyfile:/etc/caddy/Caddyfile:ro
      - /opt/compose/root_ca.crt:/root_ca.crt:ro
      #- $PWD/site:/srv
      - caddy_data:/data
      - caddy_config:/config
      - /etc/hosts:/etc/hosts:ro
    ports:
      - [IP]:80:80
      - [IP]:443:443
    networks:
      - caddy_net
    labels:
      - com.centurylinklabs.watchtower.enable=true
  watchtower:
    image: [URL]/containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    environment:
      - WATCHTOWER_CLEANUP=true
      - NO_COLOR=true
      - WATCHTOWER_POLL_INTERVAL=21600
      - WATCHTOWER_LABEL_ENABLE=true
      - WATCHTOWER_ROLLING_RESTART=true
      - WATCHTOWER_TIMEOUT=200s
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  portainer:
    image: [URL]/infra/portainer-trusted:latest
    container_name: portainer
    restart: unless-stopped
    environment:
      - AGENT_SECRET=${AGENT_SECRET}
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - caddy_net
    labels:
      - com.centurylinklabs.watchtower.enable=true
  gitea:
    image: [URL]/infra/gitea-trusted:latest
    container_name: gitea
    restart: unless-stopped
    environment:
      - USER_UID=1000
      - USER_GID=1000
      - GITEA__database__DB_TYPE=postgres
      - GITEA__database__HOST=gitea_db
      - GITEA__database__NAME=gitea
      - GITEA__database__USER=gitea
      - GITEA__database__PASSWD=${GITEA_DB_PASS}
      - GITEA__webhook__ALLOWED_HOST_LIST=private
    volumes:
      - gitea_data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - [IP]:66:22
    depends_on:
      - gitea_db
    networks:
      - gitea_db_net
      - caddy_net
    labels:
      - com.centurylinklabs.watchtower.enable=true
  gitea_db:
    image: [URL]/rhel8/postgresql-13:latest
    container_name: gitea_db
    restart: unless-stopped
    environment:
      - POSTGRESQL_USER=gitea
      - POSTGRESQL_PASSWORD=${GITEA_DB_PASS}
      - POSTGRESQL_DATABASE=gitea
    volumes:
      - gitea_db_data:/var/lib/pgsql/data
    networks:
      - gitea_db_net
    labels:
      - com.centurylinklabs.watchtower.enable=true
  drone:
    image: [URL]/infra/drone-trusted:latest
    container_name: drone
    restart: unless-stopped
    environment:
      - DRONE_GITEA_SERVER=https://[URL]
      - DRONE_GITEA_CLIENT_ID=${GITEA_CLIENT_ID}
      - DRONE_GITEA_CLIENT_SECRET=${GITEA_CLIENT_SECRET}
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_SERVER_HOST=URL
      - DRONE_SERVER_PROTO=https
      - DRONE_GIT_ALWAYS_AUTH=true
      - DRONE_USER_CREATE=username:[username],admin:true
    volumes:
      - drone_data:/data
    networks:
      - caddy_net
    labels:
      - com.centurylinklabs.watchtower.enable=true

volumes:
  adguard_conf:
    external: true
  adguard_work:
    external: true
  caddy_data:
    external: true
  caddy_config:
    external: true
  portainer_data:
    external: true
  gitea_data:
    external: true
  gitea_db_data:
    external: true
  drone_data:
    external: true
networks:
  gitea_db_net:
  caddy_net:
